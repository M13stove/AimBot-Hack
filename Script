local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Spectator Hub 👀",
   Icon = 0, -- No icon
   LoadingTitle = "Spectator Hub",
   LoadingSubtitle = "by Kanshy_OIO",
   Theme = "Default",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = true,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "SpectatorHub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false
})

local MainTab = Window:CreateTab("Home 🏡", nil)
local MainSection = MainTab:CreateSection("Spectator Controls")

-- Variables
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local playerList = {} -- List of players for spectating
local currentPlayerIndex = 0 -- Index of the currently spectated player

-- Function to refresh the list of players
local function refreshPlayerList()
   playerList = {}
   for _, player in pairs(Players:GetPlayers()) do
      if player ~= LocalPlayer then
         table.insert(playerList, player)
      end
   end
end

-- Function to spectate a player based on the index
local function spectatePlayer(index)
   if index > 0 and index <= #playerList then
      local targetPlayer = playerList[index]
      if targetPlayer and targetPlayer.Character then
         Camera.CameraSubject = targetPlayer.Character
         print("Spectating:", targetPlayer.Name)
      else
         Camera.CameraSubject = LocalPlayer.Character
         print("Player not available, resetting camera.")
      end
   else
      Camera.CameraSubject = LocalPlayer.Character
      print("Invalid index, resetting camera.")
   end
end

-- Next Player Button
MainTab:CreateButton({
   Name = "Next Player ➡️",
   Callback = function()
      refreshPlayerList()
      if #playerList > 0 then
         currentPlayerIndex = currentPlayerIndex + 1
         if currentPlayerIndex > #playerList then
            currentPlayerIndex = 1 -- Loop back to the first player
         end
         spectatePlayer(currentPlayerIndex)
      else
         print("No players available to spectate.")
      end
   end,
})

-- Previous Player Button
MainTab:CreateButton({
   Name = "⬅️ Previous Player",
   Callback = function()
      refreshPlayerList()
      if #playerList > 0 then
         currentPlayerIndex = currentPlayerIndex - 1
         if currentPlayerIndex < 1 then
            currentPlayerIndex = #playerList -- Loop back to the last player
         end
         spectatePlayer(currentPlayerIndex)
      else
         print("No players available to spectate.")
      end
   end,
})

-- Button to Destroy GUI
MainTab:CreateButton({
   Name = "Destroy GUI",
   Callback = function()
      Rayfield:Destroy()
   end,
})
